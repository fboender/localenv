#!/bin/sh
#
#  localenv-scripts
#
#  Run scripts in /dir/[profile]/ some the correct order.
#
#

function usage() {
	echo "Usage: $0 PROFILE PATH"
	echo "Run scripts in [path]/[profile]/scripts/ in the correct order."
	echo
	echo "Options:"
    echo "  -d, --dry-run           Do not actually run any scripts."
    echo "  -p, --profile PROFILE   Profile to use."
    echo "  -v, --verbose           Lots of output."
    echo "  -h, --help              This help message."
	echo
    echo "  PROFILE"
    echo "    The name of the profile to use. This must correspond with the"
    echo "    name of a directory in PATH."
    echo
}

function msg() {
	if [ -n "$FLAG_VERBOSE" ]; then
		echo "$*" >&2
	fi
}

function handle_cmdline() {
	TEMP=`getopt -o hdvp: --long dry-run,profile,verbose,help -n 'localenv-scripts' -- "$@"`

	if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

	eval set -- "$TEMP"

	while true ; do
		case "$1" in
			-d|--dry-run)  DRY_RUN=1;      shift 1;;
			-p|--profile)  PROFILE=$2;     shift 2;;
			-v|--verbose)  FLAG_VERBOSE=1; shift 1;;
			-h|--help)     FLAG_HELP=1;    shift 1;;
			--)                            shift 1; break ;;
			*)             echo "Internal error!" ; exit 1 ;;
		esac
	done

	if [ $# -ne 2 ]; then
		FLAG_HELP=1
	fi

	if [ "$FLAG_HELP" ]; then
		usage
		exit
	fi

	PROFILE=$1
	SCR_PATH=$2

	if [ ! "$PROFILE" ]; then
		usage
		exit
	fi

    msg "Using profile $PROFILE."

	if [ ! -d "$SCR_PATH/$PROFILE/scripts/" ]; then
		echo "No scripts found for profile '$PROFILE' in $SCR_PATH/$PROFILE/scripts/" >&2
		exit
	fi
}

handle_cmdline $*

msg "Searching for scripts in $SCR_PATH/$PROFILE/scripts/"

for SCRIPT in `ls "$SCR_PATH/$PROFILE/scripts/" | sort -n`; do
	RSCRIPT="$SCR_PATH/$PROFILE/scripts/$SCRIPT"
	if [ -x $RSCRIPT -a -f $RSCRIPT ]; then
		if [ "$DRY_RUN" ]; then
			echo "Would have run $RSCRIPT"
		else
            msg -n "Running $RSCRIPT. "
			localenv-script-wrapper $RSCRIPT
            msg "Exit status: $?"
		fi
	fi
done
